{"abi":[{"type":"error","name":"BalanceError","inputs":[]},{"type":"error","name":"CalibrationError","inputs":[{"name":"delquote","type":"uint256","internalType":"uint256"},{"name":"delbase","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"DeltaInError","inputs":[]},{"type":"error","name":"DeltaOutError","inputs":[]},{"type":"error","name":"GammaError","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvariantError","inputs":[{"name":"invariant","type":"int128","internalType":"int128"},{"name":"nextInvariant","type":"int128","internalType":"int128"}]},{"type":"error","name":"LockedError","inputs":[]},{"type":"error","name":"MinLiquidityError","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"PoolDuplicateError","inputs":[]},{"type":"error","name":"PoolExpiredError","inputs":[]},{"type":"error","name":"SigmaError","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"StrikeError","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"UninitializedError","inputs":[]},{"type":"error","name":"ZeroDeltasError","inputs":[]},{"type":"error","name":"ZeroLiquidityError","inputs":[]},{"type":"error","name":"baseBalanceError","inputs":[{"name":"expected","type":"uint256","internalType":"uint256"},{"name":"actual","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"quoteBalanceError","inputs":[{"name":"expected","type":"uint256","internalType":"uint256"},{"name":"actual","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"quotePerLpError","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delquote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delbase\",\"type\":\"uint256\"}],\"name\":\"CalibrationError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaInError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeltaOutError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"GammaError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int128\",\"name\":\"invariant\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"nextInvariant\",\"type\":\"int128\"}],\"name\":\"InvariantError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockedError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"MinLiquidityError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolDuplicateError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolExpiredError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SigmaError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"StrikeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UninitializedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroDeltasError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidityError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"baseBalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"quoteBalanceError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"quotePerLpError\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Primitive\",\"details\":\"Peripheral smart contracts should try catch and check if data matches another custom error\",\"errors\":{\"InvariantError(int128,int128)\":[{\"details\":\"Most important check as it verifies the validity of a desired swap\",\"params\":{\"invariant\":\"Pre-swap invariant updated with new tau\",\"nextInvariant\":\"Post-swap invariant after the swap amounts are applied to reserves\"}}],\"baseBalanceError(uint256,uint256)\":[{\"params\":{\"actual\":\"Actual base balance\",\"expected\":\"Expected base balance\"}}],\"quoteBalanceError(uint256,uint256)\":[{\"params\":{\"actual\":\"Actual quote balance\",\"expected\":\"Expected quote balance\"}}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"Errors for the Primitive Engine contract\",\"version\":1},\"userdoc\":{\"errors\":{\"BalanceError()\":[{\"notice\":\"Thrown when the balanceOf function is not successful and does not return data\"}],\"CalibrationError(uint256,uint256)\":[{\"notice\":\"Thrown when the parameters of a new pool are invalid, causing initial reserves to be 0\"}],\"DeltaInError()\":[{\"notice\":\"Thrown when the deltaIn parameter is 0\"}],\"DeltaOutError()\":[{\"notice\":\"Thrown when the deltaOut parameter is 0\"}],\"GammaError(uint256)\":[{\"notice\":\"Thrown when gamma, equal to 1 - fee %, is outside its bounds: 9_000 <= gamma <= 10_000; 1_000 = 10% fee\"}],\"InvariantError(int128,int128)\":[{\"notice\":\"Thrown when the invariant check fails\"}],\"LockedError()\":[{\"notice\":\"Thrown on attempted re-entrancy on a function with a re-entrancy guard\"}],\"MinLiquidityError(uint256)\":[{\"notice\":\"Thrown when liquidity is lower than or equal to the minimum amount of liquidity\"}],\"PoolDuplicateError()\":[{\"notice\":\"Thrown in create when a pool with computed poolId already exists\"}],\"PoolExpiredError()\":[{\"notice\":\"Thrown when calling an expired pool, where block.timestamp > maturity, + BUFFER if swap\"}],\"SigmaError(uint256)\":[{\"notice\":\"Thrown when sigma is outside the range of acceptable values, 1 <= sigma <= 1e7 with 4 precision\"}],\"StrikeError(uint256)\":[{\"notice\":\"Thrown when strike is not valid, i.e. equal to 0 or greater than 2^128\"}],\"UninitializedError()\":[{\"notice\":\"Thrown when the pool with poolId has not been created\"}],\"ZeroDeltasError()\":[{\"notice\":\"Thrown when the quote or base amount is 0\"}],\"ZeroLiquidityError()\":[{\"notice\":\"Thrown when the liquidity parameter is 0\"}],\"baseBalanceError(uint256,uint256)\":[{\"notice\":\"Thrown when the expected base balance is less than the actual balance\"}],\"quoteBalanceError(uint256,uint256)\":[{\"notice\":\"Thrown when the expected quote balance is less than the actual balance\"}],\"quotePerLpError(uint256)\":[{\"notice\":\"Thrown when quotePerLp is outside the range of acceptable values, 0 < quotePerLp <= 1equoteDecimals\"}]},\"kind\":\"user\",\"methods\":{},\"notice\":\"Custom errors are encoded with their selector and arguments\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/engine/IEngineErrors.sol\":\"IEngineErrors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/engine/IEngineErrors.sol\":{\"keccak256\":\"0x84069f32de8c2bba86a7c6a451ebfa55ba1dbaa848fcd1258b2d6ab094e9cfb2\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://221dc37218d8c60d173780812191958c81086b3b2ddb0cacd72c938ef22ecf32\",\"dweb:/ipfs/QmPk8VqUHeChvPRKq848DYc1TpcXpiPVFt99YURoQp2YaZ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"BalanceError"},{"inputs":[{"internalType":"uint256","name":"delquote","type":"uint256"},{"internalType":"uint256","name":"delbase","type":"uint256"}],"type":"error","name":"CalibrationError"},{"inputs":[],"type":"error","name":"DeltaInError"},{"inputs":[],"type":"error","name":"DeltaOutError"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"type":"error","name":"GammaError"},{"inputs":[{"internalType":"int128","name":"invariant","type":"int128"},{"internalType":"int128","name":"nextInvariant","type":"int128"}],"type":"error","name":"InvariantError"},{"inputs":[],"type":"error","name":"LockedError"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"type":"error","name":"MinLiquidityError"},{"inputs":[],"type":"error","name":"PoolDuplicateError"},{"inputs":[],"type":"error","name":"PoolExpiredError"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"type":"error","name":"SigmaError"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"type":"error","name":"StrikeError"},{"inputs":[],"type":"error","name":"UninitializedError"},{"inputs":[],"type":"error","name":"ZeroDeltasError"},{"inputs":[],"type":"error","name":"ZeroLiquidityError"},{"inputs":[{"internalType":"uint256","name":"expected","type":"uint256"},{"internalType":"uint256","name":"actual","type":"uint256"}],"type":"error","name":"baseBalanceError"},{"inputs":[{"internalType":"uint256","name":"expected","type":"uint256"},{"internalType":"uint256","name":"actual","type":"uint256"}],"type":"error","name":"quoteBalanceError"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"type":"error","name":"quotePerLpError"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/engine/IEngineErrors.sol":"IEngineErrors"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/engine/IEngineErrors.sol":{"keccak256":"0x84069f32de8c2bba86a7c6a451ebfa55ba1dbaa848fcd1258b2d6ab094e9cfb2","urls":["bzz-raw://221dc37218d8c60d173780812191958c81086b3b2ddb0cacd72c938ef22ecf32","dweb:/ipfs/QmPk8VqUHeChvPRKq848DYc1TpcXpiPVFt99YURoQp2YaZ"],"license":"GPL-3.0-only"}},"version":1},"id":24}