{"abi":[{"type":"function","name":"BUFFER","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"MIN_LIQUIDITY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"PRECISION","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"base","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"calibrations","inputs":[{"name":"poolId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"strike","type":"uint128","internalType":"uint128"},{"name":"sigma","type":"uint32","internalType":"uint32"},{"name":"maturity","type":"uint32","internalType":"uint32"},{"name":"lastTimestamp","type":"uint32","internalType":"uint32"},{"name":"gamma","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"factory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"invariantOf","inputs":[{"name":"poolId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"invariant","type":"int128","internalType":"int128"}],"stateMutability":"view"},{"type":"function","name":"liquidity","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"poolId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"margins","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"balanceQuote","type":"uint128","internalType":"uint128"},{"name":"balanceBase","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"quote","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"reserves","inputs":[{"name":"poolId","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"reserveQuote","type":"uint128","internalType":"uint128"},{"name":"reserveBase","type":"uint128","internalType":"uint128"},{"name":"liquidity","type":"uint128","internalType":"uint128"},{"name":"blockTimestamp","type":"uint32","internalType":"uint32"},{"name":"cumulativeQuote","type":"uint256","internalType":"uint256"},{"name":"cumulativeBase","type":"uint256","internalType":"uint256"},{"name":"cumulativeLiquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"scaleFactorBase","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"scaleFactorQuote","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"BUFFER()":"8fbc3ecd","MIN_LIQUIDITY()":"21b77d63","PRECISION()":"aaf5eb68","base()":"5001f3b5","calibrations(bytes32)":"23c5b952","factory()":"c45a0155","invariantOf(bytes32)":"546fecae","liquidity(address,bytes32)":"6b35bb6b","margins(address)":"38820465","quote()":"999b93af","reserves(bytes32)":"00bbf1e4","scaleFactorBase()":"886a4eba","scaleFactorQuote()":"e3c0986a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BUFFER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"calibrations\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"strike\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"sigma\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"maturity\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"lastTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gamma\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"invariantOf\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"invariant\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"margins\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balanceQuote\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"balanceBase\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserveQuote\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserveBase\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cumulativeLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleFactorBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scaleFactorQuote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Primitive\",\"kind\":\"dev\",\"methods\":{\"BUFFER()\":{\"returns\":{\"_0\":\"Amount of seconds after pool expiry which allows swaps, no swaps after buffer\"}},\"MIN_LIQUIDITY()\":{\"returns\":{\"_0\":\"Amount of liquidity burned on `create()` calls\"}},\"PRECISION()\":{\"returns\":{\"_0\":\"Precision units to scale to when doing token related calculations\"}},\"base()\":{\"returns\":{\"_0\":\"base token address, a more accurate name is the quote token\"}},\"calibrations(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"gamma\":\"          Multiplied against swap in amounts to apply fee, equal to 1 - fee % but units are in basis points, valid for (9_000, 10_000)\",\"lastTimestamp\":\"  Last timestamp used to calculate time until expiry, aka \\\"tau\\\"\",\"maturity\":\"       Timestamp which starts the BUFFER countdown until swaps will cease, in seconds, valid for (block.timestamp, 2^32-1]\",\"sigma\":\"          AKA Implied Volatility in basis points, determines the price impact of swaps, valid for (1, 10_000_000)\",\"strike\":\"         Marginal price of the pool's quote token at maturity, with the same decimals as the base token, valid [0, 2^128-1]\"}},\"invariantOf(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"invariant\":\"  Signed fixed point 64.64 number, invariant of `poolId`\"}},\"liquidity(address,bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"liquidity\":\"  Liquidity owned by `account` in `poolId`\"}},\"margins(address)\":{\"params\":{\"account\":\"Margin account to fetch\"},\"returns\":{\"balanceBase\":\"  Balance of the base token\",\"balanceQuote\":\"   Balance of the quote token\"}},\"reserves(bytes32)\":{\"params\":{\"poolId\":\"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma\"},\"returns\":{\"blockTimestamp\":\"      Timestamp when the cumulative reserve values were last updated\",\"cumulativeBase\":\"    Cumulative sum of base token reserves of the previous update\",\"cumulativeLiquidity\":\" Cumulative sum of total supply of liquidity of the previous update\",\"cumulativeQuote\":\"     Cumulative sum of quote token reserves of the previous update\",\"liquidity\":\"           Total supply of liquidity for the curve\",\"reserveBase\":\"       base token balance in the reserve\",\"reserveQuote\":\"        quote token balance in the reserve\"}},\"scaleFactorBase()\":{\"returns\":{\"_0\":\"Multiplier to scale amounts to/from, equal to 10^(18 - baseDecimals)\"}},\"scaleFactorQuote()\":{\"returns\":{\"_0\":\"Multiplier to scale amounts to/from, equal to 10^(18 - quoteDecimals)\"}}},\"title\":\"View functions of the Primitive Engine contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calibrations(bytes32)\":{\"notice\":\"Fetches `Calibration` pool parameters\"},\"invariantOf(bytes32)\":{\"notice\":\"Fetches the current invariant, notation is usually `k`, based on quote and base token reserves of pool with `poolId`\"},\"liquidity(address,bytes32)\":{\"notice\":\"Fetches position liquidity an account address and poolId\"},\"margins(address)\":{\"notice\":\"Fetches the margin balances of `account`\"},\"reserves(bytes32)\":{\"notice\":\"Fetches the global reserve state for a pool with `poolId`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/engine/IEngineView.sol\":\"IEngineView\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/engine/IEngineView.sol\":{\"keccak256\":\"0xf68a18d21c7adece86afce8e0829bd0cdbb733a42c7bdf177625f2d66158c560\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://4f019f9600b47e6f6f36adb2b09acefafb5129a3bcab13e499bc0884a5e4d0b0\",\"dweb:/ipfs/QmNwF9wha1WwWKXPRYAnDkNkBW7Dh5Kbt5F9f7n8WR8nqT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"BUFFER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"MIN_LIQUIDITY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"base","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"calibrations","outputs":[{"internalType":"uint128","name":"strike","type":"uint128"},{"internalType":"uint32","name":"sigma","type":"uint32"},{"internalType":"uint32","name":"maturity","type":"uint32"},{"internalType":"uint32","name":"lastTimestamp","type":"uint32"},{"internalType":"uint32","name":"gamma","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"invariantOf","outputs":[{"internalType":"int128","name":"invariant","type":"int128"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"liquidity","outputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"margins","outputs":[{"internalType":"uint128","name":"balanceQuote","type":"uint128"},{"internalType":"uint128","name":"balanceBase","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"quote","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"poolId","type":"bytes32"}],"stateMutability":"view","type":"function","name":"reserves","outputs":[{"internalType":"uint128","name":"reserveQuote","type":"uint128"},{"internalType":"uint128","name":"reserveBase","type":"uint128"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"uint256","name":"cumulativeQuote","type":"uint256"},{"internalType":"uint256","name":"cumulativeBase","type":"uint256"},{"internalType":"uint256","name":"cumulativeLiquidity","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"scaleFactorBase","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"scaleFactorQuote","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"BUFFER()":{"returns":{"_0":"Amount of seconds after pool expiry which allows swaps, no swaps after buffer"}},"MIN_LIQUIDITY()":{"returns":{"_0":"Amount of liquidity burned on `create()` calls"}},"PRECISION()":{"returns":{"_0":"Precision units to scale to when doing token related calculations"}},"base()":{"returns":{"_0":"base token address, a more accurate name is the quote token"}},"calibrations(bytes32)":{"params":{"poolId":"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma"},"returns":{"gamma":"          Multiplied against swap in amounts to apply fee, equal to 1 - fee % but units are in basis points, valid for (9_000, 10_000)","lastTimestamp":"  Last timestamp used to calculate time until expiry, aka \"tau\"","maturity":"       Timestamp which starts the BUFFER countdown until swaps will cease, in seconds, valid for (block.timestamp, 2^32-1]","sigma":"          AKA Implied Volatility in basis points, determines the price impact of swaps, valid for (1, 10_000_000)","strike":"         Marginal price of the pool's quote token at maturity, with the same decimals as the base token, valid [0, 2^128-1]"}},"invariantOf(bytes32)":{"params":{"poolId":"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma"},"returns":{"invariant":"  Signed fixed point 64.64 number, invariant of `poolId`"}},"liquidity(address,bytes32)":{"params":{"poolId":"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma"},"returns":{"liquidity":"  Liquidity owned by `account` in `poolId`"}},"margins(address)":{"params":{"account":"Margin account to fetch"},"returns":{"balanceBase":"  Balance of the base token","balanceQuote":"   Balance of the quote token"}},"reserves(bytes32)":{"params":{"poolId":"Keccak256 hash of the engine address, strike, sigma, maturity, and gamma"},"returns":{"blockTimestamp":"      Timestamp when the cumulative reserve values were last updated","cumulativeBase":"    Cumulative sum of base token reserves of the previous update","cumulativeLiquidity":" Cumulative sum of total supply of liquidity of the previous update","cumulativeQuote":"     Cumulative sum of quote token reserves of the previous update","liquidity":"           Total supply of liquidity for the curve","reserveBase":"       base token balance in the reserve","reserveQuote":"        quote token balance in the reserve"}},"scaleFactorBase()":{"returns":{"_0":"Multiplier to scale amounts to/from, equal to 10^(18 - baseDecimals)"}},"scaleFactorQuote()":{"returns":{"_0":"Multiplier to scale amounts to/from, equal to 10^(18 - quoteDecimals)"}}},"version":1},"userdoc":{"kind":"user","methods":{"calibrations(bytes32)":{"notice":"Fetches `Calibration` pool parameters"},"invariantOf(bytes32)":{"notice":"Fetches the current invariant, notation is usually `k`, based on quote and base token reserves of pool with `poolId`"},"liquidity(address,bytes32)":{"notice":"Fetches position liquidity an account address and poolId"},"margins(address)":{"notice":"Fetches the margin balances of `account`"},"reserves(bytes32)":{"notice":"Fetches the global reserve state for a pool with `poolId`"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/engine/IEngineView.sol":"IEngineView"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/engine/IEngineView.sol":{"keccak256":"0xf68a18d21c7adece86afce8e0829bd0cdbb733a42c7bdf177625f2d66158c560","urls":["bzz-raw://4f019f9600b47e6f6f36adb2b09acefafb5129a3bcab13e499bc0884a5e4d0b0","dweb:/ipfs/QmNwF9wha1WwWKXPRYAnDkNkBW7Dh5Kbt5F9f7n8WR8nqT"],"license":"GPL-3.0-only"}},"version":1},"id":26}