{"abi":[{"type":"function","name":"MIN_LIQUIDITY_FACTOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"args","inputs":[],"outputs":[{"name":"factory","type":"address","internalType":"address"},{"name":"quote","type":"address","internalType":"address"},{"name":"base","type":"address","internalType":"address"},{"name":"scaleFactorQuote","type":"uint256","internalType":"uint256"},{"name":"scaleFactorBase","type":"uint256","internalType":"uint256"},{"name":"minLiquidity","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"deploy","inputs":[{"name":"quote","type":"address","internalType":"address"},{"name":"base","type":"address","internalType":"address"}],"outputs":[{"name":"engine","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployer","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getEngine","inputs":[{"name":"quote","type":"address","internalType":"address"},{"name":"base","type":"address","internalType":"address"}],"outputs":[{"name":"engine","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"DeployEngine","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"quote","type":"address","indexed":true,"internalType":"address"},{"name":"base","type":"address","indexed":true,"internalType":"address"},{"name":"engine","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"MIN_LIQUIDITY_FACTOR()":"45d9b663","args()":"4e9b75b6","deploy(address,address)":"545e7c61","deployer()":"d5f39488","getEngine(address,address)":"62f7f918"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"engine\",\"type\":\"address\"}],\"name\":\"DeployEngine\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_LIQUIDITY_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"args\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scaleFactorQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scaleFactorBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"engine\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"quote\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"base\",\"type\":\"address\"}],\"name\":\"getEngine\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"engine\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Primitive\",\"events\":{\"DeployEngine(address,address,address,address)\":{\"params\":{\"base\":\"base token of Engine to deploy\",\"engine\":\"Deployed engine address\",\"from\":\"Calling `msg.sender` of deploy\",\"quote\":\"quote token of Engine to deploy\"}}},\"kind\":\"dev\",\"methods\":{\"MIN_LIQUIDITY_FACTOR()\":{\"details\":\"E.g. if the lowest decimal token is 6, min liquidity w/ 18 decimals                 cannot be 1000 wei, therefore the token decimals                 divided by the min liquidity factor is the amount of minimum liquidity                 MIN_LIQUIDITY = 10 ^ (Decimals / MIN_LIQUIDITY_FACTOR)\"},\"args()\":{\"returns\":{\"base\":\"            base token\",\"factory\":\"           Smart contract deploying the Engine contract\",\"minLiquidity\":\"      Minimum amount of liquidity on pool creation\",\"quote\":\"             quote token\",\"scaleFactorBase\":\" Scale factor of the base token, 10^(18 - baseTokenDecimals)\",\"scaleFactorQuote\":\"  Scale factor of the quote token, 10^(18 - quoteTokenDecimals)\"}},\"deploy(address,address)\":{\"params\":{\"base\":\"base token, the quote token\",\"quote\":\"quote token, the underlying token\"}},\"deployer()\":{\"returns\":{\"_0\":\"Deployer of this factory contract\"}},\"getEngine(address,address)\":{\"params\":{\"base\":\"base token, the quote token\",\"quote\":\"quote token, the underlying token\"},\"returns\":{\"engine\":\" Engine address for a quote and base token\"}}},\"title\":\"Factory Interface\",\"version\":1},\"userdoc\":{\"events\":{\"DeployEngine(address,address,address,address)\":{\"notice\":\"Created a new engine contract!\"}},\"kind\":\"user\",\"methods\":{\"MIN_LIQUIDITY_FACTOR()\":{\"notice\":\"Used to scale the minimum amount of liquidity to lowest precision\"},\"args()\":{\"notice\":\"Called within Engine constructor so Engine can set immutable                            variables without constructor args\"},\"deploy(address,address)\":{\"notice\":\"Deploys a new Engine contract and sets the `getEngine` mapping for the tokens\"},\"deployer()\":{\"notice\":\"Deployer does not have any access controls to wield\"},\"getEngine(address,address)\":{\"notice\":\"Fetches engine address of a token pair which has been deployed from this factory\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/interfaces/IFactory.sol\":{\"keccak256\":\"0x3ca38de55fb6723433a2cd48e79ae51cd21f4dbd17dcc053b9891081bbbfb84e\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bec9b0fecbe7d5ee37acd4d28ff427c9be343f60c8b8e16b33fc0a692a8bb0da\",\"dweb:/ipfs/QmNhXmuHouvfjg2pfbJCpDDwfphcGzJLcdEmm6cHsTMqPr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"quote","type":"address","indexed":true},{"internalType":"address","name":"base","type":"address","indexed":true},{"internalType":"address","name":"engine","type":"address","indexed":false}],"type":"event","name":"DeployEngine","anonymous":false},{"inputs":[],"stateMutability":"pure","type":"function","name":"MIN_LIQUIDITY_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"args","outputs":[{"internalType":"address","name":"factory","type":"address"},{"internalType":"address","name":"quote","type":"address"},{"internalType":"address","name":"base","type":"address"},{"internalType":"uint256","name":"scaleFactorQuote","type":"uint256"},{"internalType":"uint256","name":"scaleFactorBase","type":"uint256"},{"internalType":"uint256","name":"minLiquidity","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"quote","type":"address"},{"internalType":"address","name":"base","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deploy","outputs":[{"internalType":"address","name":"engine","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"deployer","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"quote","type":"address"},{"internalType":"address","name":"base","type":"address"}],"stateMutability":"view","type":"function","name":"getEngine","outputs":[{"internalType":"address","name":"engine","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"MIN_LIQUIDITY_FACTOR()":{"details":"E.g. if the lowest decimal token is 6, min liquidity w/ 18 decimals                 cannot be 1000 wei, therefore the token decimals                 divided by the min liquidity factor is the amount of minimum liquidity                 MIN_LIQUIDITY = 10 ^ (Decimals / MIN_LIQUIDITY_FACTOR)"},"args()":{"returns":{"base":"            base token","factory":"           Smart contract deploying the Engine contract","minLiquidity":"      Minimum amount of liquidity on pool creation","quote":"             quote token","scaleFactorBase":" Scale factor of the base token, 10^(18 - baseTokenDecimals)","scaleFactorQuote":"  Scale factor of the quote token, 10^(18 - quoteTokenDecimals)"}},"deploy(address,address)":{"params":{"base":"base token, the quote token","quote":"quote token, the underlying token"}},"deployer()":{"returns":{"_0":"Deployer of this factory contract"}},"getEngine(address,address)":{"params":{"base":"base token, the quote token","quote":"quote token, the underlying token"},"returns":{"engine":" Engine address for a quote and base token"}}},"version":1},"userdoc":{"kind":"user","methods":{"MIN_LIQUIDITY_FACTOR()":{"notice":"Used to scale the minimum amount of liquidity to lowest precision"},"args()":{"notice":"Called within Engine constructor so Engine can set immutable                            variables without constructor args"},"deploy(address,address)":{"notice":"Deploys a new Engine contract and sets the `getEngine` mapping for the tokens"},"deployer()":{"notice":"Deployer does not have any access controls to wield"},"getEngine(address,address)":{"notice":"Fetches engine address of a token pair which has been deployed from this factory"}},"version":1}},"settings":{"remappings":["forge-std/=lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IFactory.sol":"IFactory"},"evmVersion":"paris","libraries":{}},"sources":{"src/interfaces/IFactory.sol":{"keccak256":"0x3ca38de55fb6723433a2cd48e79ae51cd21f4dbd17dcc053b9891081bbbfb84e","urls":["bzz-raw://bec9b0fecbe7d5ee37acd4d28ff427c9be343f60c8b8e16b33fc0a692a8bb0da","dweb:/ipfs/QmNhXmuHouvfjg2pfbJCpDDwfphcGzJLcdEmm6cHsTMqPr"],"license":"GPL-3.0-only"}},"version":1},"id":18}